#!/usr/bin/env python3
"""
AI Automation Assistant - WSS Studio Art
Criado automaticamente pelo assistente IA para demonstrar capacidades de automa√ß√£o

Este script demonstra automa√ß√£o de tarefas comuns para produtividade
"""

import os
import requests
import json
from datetime import datetime
import subprocess

class AutomationAssistant:
    def __init__(self):
        self.name = "WSS Studio Art AI Assistant"
        self.version = "1.0.0"
        self.created_by = "AI Assistant"
        
    def create_project_structure(self, project_name):
        """Cria estrutura b√°sica de projeto"""
        folders = [
            f"{project_name}/src",
            f"{project_name}/docs", 
            f"{project_name}/tests",
            f"{project_name}/assets"
        ]
        
        for folder in folders:
            os.makedirs(folder, exist_ok=True)
            print(f"‚úÖ Pasta criada: {folder}")
            
    def generate_readme(self, project_name, description):
        """Gera README.md automaticamente"""
        readme_content = f"""# {project_name}

{description}

## Instala√ß√£o
```bash
pip install -r requirements.txt
```

## Uso
```python
python main.py
```

## Contribui√ß√£o
Criado com ‚ù§Ô∏è pelo WSS Studio Art

---
*Gerado automaticamente em {datetime.now().strftime('%d/%m/%Y %H:%M')}*
"""
        
        with open(f"{project_name}/README.md", "w", encoding="utf-8") as f:
            f.write(readme_content)
        print(f"‚úÖ README.md criado para {project_name}")
        
    def check_github_repos(self, username):
        """Verifica reposit√≥rios do GitHub"""
        try:
            url = f"https://api.github.com/users/{username}/repos"
            response = requests.get(url)
            repos = response.json()
            
            print(f"üìä Reposit√≥rios de {username}:")
            for repo in repos[:5]:  # Mostra apenas os 5 primeiros
                print(f"  - {repo['name']}: {repo['description'] or 'Sem descri√ß√£o'}")
                
        except Exception as e:
            print(f"‚ùå Erro ao buscar reposit√≥rios: {e}")
            
    def run_automation_demo(self):
        """Demonstra capacidades de automa√ß√£o"""
        print("ü§ñ WSS Studio Art - AI Automation Assistant")
        print("=" * 50)
        print("Demonstrando capacidades de automa√ß√£o...")
        
        # Exemplo de automa√ß√£o
        self.create_project_structure("demo-project")
        self.generate_readme("demo-project", "Projeto de demonstra√ß√£o criado automaticamente")
        
        print("\n‚ú® Automa√ß√£o conclu√≠da com sucesso!")
        print("Este script foi criado automaticamente pelo assistente IA")

if __name__ == "__main__":
    assistant = AutomationAssistant()
    assistant.run_automation_demo()
